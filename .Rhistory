order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
dev.off()  # << THIS IS CRITICAL
#| label: bubble-corrplot
#| fig-cap: "**Figure 1**: Bubble-style correlation matrix of student habits and exam score"
library(corrplot)
bubble_corr <- data_clean |>
dplyr::select(StudyHours, AttendanceRate, SleepHours, ExamScore) |>
cor(use = "complete.obs")
corrplot(
bubble_corr,
method = "circle",
type = "lower",
order = "hclust",
tl.col = "black",
tl.srt = 45,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.9,
diag = FALSE
)
#| label: save-badhabits-corrplot
#| echo: false
#| include: false
# Ensure output folder exists
if (!dir.exists("figures")) dir.create("figures")
# Save plot to file
png("figures/badhabits-corrplot.png", width = 800, height = 600)
bad_bubble_corr <- data_clean |>
dplyr::select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
par(mar = c(4, 4, 4, 4))  # Better margins for presentation
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
dev.off()
#| label: save-badhabits-corrplot
#| echo: false
#| include: false
# Ensure output folder exists
if (!dir.exists("figures")) dir.create("figures")
# Save plot to file
png("figures/badhabits-corrplot.png", width = 800, height = 600)
bad_bubble_corr <- data_clean |>
dplyr::select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
par(mar = c(4, 4, 4, 4))  # Better margins for presentation
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
dev.off()
#| label: save-badhabits-corrplot
#| echo: false
#| include: false
bad_bubble_corr <- data_clean |>
dplyr::select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
par(mar = c(4, 4, 4, 4))
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
#| label: badhabits-corrplot
#| echo: false
#| include: false
bad_bubble_corr <- data_clean |>
dplyr::select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
par(mar = c(4, 4, 4, 4))
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
#| echo: false
#| warning: false
library(corrplot)
good_corr <- data_clean |>
select(StudyHours, AttendanceRate, SleepHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
colnames(good_corr) <- c("Study", "Attend", "Sleep", "Score")
rownames(good_corr) <- colnames(good_corr)
par(mar = c(2, 2, 5, 2))  # Prevent label clipping
corrplot(
good_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
#| echo: false
#| warning: false
#| label: bubble-corrplot
#| fig-cap: "**Figure 1**: Bubble-style correlation matrix of student habits and exam score"
# Compute correlation matrix using proper column names
bubble_corr <- data_clean |>
select(StudyHours, AttendanceRate, SleepHours, ExamScore) |>
cor(use = "complete.obs")
# Bubble matrix plot with enhanced aesthetics
corrplot(
bubble_corr,
method = "circle",
type = "lower",
order = "hclust",
tl.col = "black",
tl.srt = 45,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.9,
diag = FALSE
)
#| echo: false
#| warning: false
#| label: bubble-corrplot-bad
#| fig-cap: "**Figure 2**: Bubble-style correlation matrix of bad habits and exam score"
# Create correlation matrix
bad_bubble_corr <- data_clean |>
select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
# Rename just for the plot
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
# Set margins to avoid clipping
par(mar = c(2, 2, 5, 2))  # Add space on top
# Plot
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
png("figures/bad-habits-corrplot.png", width = 800, height = 600)
#| echo: false
#| warning: false
#| label: bubble-corrplot-bad
#| fig-cap: "**Figure 2**: Bubble-style correlation matrix of bad habits and exam score"
# Create correlation matrix
bad_bubble_corr <- data_clean |>
select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
# Rename just for the plot
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
# Set margins to avoid clipping
par(mar = c(2, 2, 5, 2))  # Add space on top
# Plot
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.9,
cl.cex = 0.8,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.8,
diag = FALSE
)
#| echo: false
#| warning: false
#| label: bubble-corrplot-bad
#| fig-cap: "**Figure 2**: Bubble-style correlation matrix of bad habits and exam score"
library(corrplot)
bad_bubble_corr <- data_clean |>
select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs")
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
par(mar = c(5, 5, 5, 5))  # spacing
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "hclust",
tl.col = "black",
tl.srt = 45,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.9,
diag = FALSE
)
#| label: Loading the required libraries
#| echo: false
#| warning: false
library("here")
library("tidyverse")
library("ggplot2")
library("ggcorrplot")
library('readr')
library('corrplot')
library('tinytex')
quarto install extension quarto-monash/report
quarto install extension quarto-monash/report
#| label: badhabits-corrplot
#| fig-cap: "Bubble-style correlation matrix of student habits and exam score"
#| echo: false
#| warning: false
#| fig-width: 3.5
#| fig-height: 3
bad_bubble_corr <- data_clean |>
dplyr::select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
colnames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
rownames(bad_bubble_corr) <- c("Social", "Netflix", "Score")
par(mar = c(4, 4, 4, 4))  # tighter margins
corrplot(
bad_bubble_corr,
method = "circle",
type = "lower",
order = "original",
tl.col = "black",
tl.srt = 45,
tl.cex = 0.65,
cl.cex = 0.6,
col = colorRampPalette(c("#d73027", "white", "#1E90FF"))(200),
addCoef.col = "black",
number.cex = 0.6,
diag = FALSE
)
#| label: Loading the required libraries
#| echo: false
#| warning: false
library("here")
library("tidyverse")
library("ggplot2")
library("ggcorrplot")
library('readr')
library('corrplot')
library('tinytex')
#| label: reading the data set for the first time
#| echo: false
#| warning: false
data <- read_csv(here("data/student_habits_performance.csv"))
# renaming of things
good_habits <- data |>
select(study_hours_per_day, attendance_percentage, sleep_hours, exam_score)
good_cor_matrix <- good_habits |>
cor(use = "complete.obs")
#| echo: false
#| warning: false
#| message: false
#| label: cleaning the dataset a bit for further processing
data_clean <- data |>
rename(
StudentID = student_id,
Age = age,
Gender = gender,
StudyHours = study_hours_per_day,
SocialMediaHours = social_media_hours,
NetflixHours = netflix_hours,
PartTimeJob = part_time_job,
AttendanceRate = attendance_percentage,
SleepHours = sleep_hours,
DietQuality = diet_quality,
ExerciseFrequency = exercise_frequency,
ParentalEducation = parental_education_level,
InternetQuality = internet_quality,
MentalHealth = mental_health_rating,
Extracurriculars = extracurricular_participation,
ExamScore = exam_score
)
#| label: Loading the required libraries
#| echo: false
#| warning: false
library("here")
library("tidyverse")
library("ggplot2")
library("ggcorrplot")
library('readr')
library('corrplot')
library('tinytex')
#| label: reading the data set for the first time
#| echo: false
#| warning: false
data <- read_csv(here("data/student_habits_performance.csv"))
# renaming of things
good_habits <- data |>
select(study_hours_per_day, attendance_percentage, sleep_hours, exam_score)
good_cor_matrix <- good_habits |>
cor(use = "complete.obs")
#| echo: false
#| warning: false
#| message: false
#| label: cleaning the dataset a bit for further processing
data_clean <- data |>
rename(
StudentID = student_id,
Age = age,
Gender = gender,
StudyHours = study_hours_per_day,
SocialMediaHours = social_media_hours,
NetflixHours = netflix_hours,
PartTimeJob = part_time_job,
AttendanceRate = attendance_percentage,
SleepHours = sleep_hours,
DietQuality = diet_quality,
ExerciseFrequency = exercise_frequency,
ParentalEducation = parental_education_level,
InternetQuality = internet_quality,
MentalHealth = mental_health_rating,
Extracurriculars = extracurricular_participation,
ExamScore = exam_score
)
#| echo: false
#| warning: false
#| tbl-cap: "Correlation matrix of good habits and exam score"
library(knitr)
kable(good_cor_matrix, digits = 2)
library(ggplot2)
# Select relevant variables
vars <- c("StudyHours", "AttendanceRate", "SleepHours", "SocialMediaHours", "NetflixHours")
# Compute correlations with ExamScore
correlations <- sapply(data_clean[, vars], function(x) cor(x, data_clean$ExamScore, use = "complete.obs"))
# Create a data frame
corr_df <- data.frame(Variable = vars, Correlation = correlations)
# Plot
ggplot(corr_df, aes(x = reorder(Variable, Correlation), y = Correlation, fill = Correlation)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
theme_minimal() +
labs(title = "Correlation with Exam Score", x = "", y = "Correlation Coefficient")
#| label: fig-correlation-bar-plot
#| fig-cap: "How Habits Correlate with Exam Performance"
#| echo: false
#| warning: false
#| message: false
library(tidyverse)
# Calculate correlations
cor_vals <- data_clean |>
select(StudyHours, AttendanceRate, SleepHours, SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
# Prepare dataframe
cor_df <- tibble(
Habit = c("Study", "Attendance", "Sleep", "Social", "Netflix"),
Correlation = c(cor_vals["ExamScore", "StudyHours"],
cor_vals["ExamScore", "AttendanceRate"],
cor_vals["ExamScore", "SleepHours"],
cor_vals["ExamScore", "SocialMediaHours"],
cor_vals["ExamScore", "NetflixHours"])
) |>
mutate(
Impact = ifelse(Correlation >= 0, "Helps", "Hurts"),
LabelPos = ifelse(Correlation >= 0, Correlation - 0.05, Correlation + 0.05)  # for placement
)
# Bar plot with clear labels
ggplot(cor_df, aes(x = Habit, y = Correlation, fill = Impact)) +
geom_col() +
geom_text(
aes(label = Correlation, y = LabelPos),
color = "white",
size = 5,
fontface = "bold"
) +
scale_fill_manual(values = c("Helps" = "dodgerblue", "Hurts" = "firebrick")) +
coord_cartesian(ylim = c(-0.25, 1)) +
labs(
x = "Student Habit",
y = "Correlation with Exam Score (r)",
fill = "Impact",
title = "How Habits Correlate with Exam Performance"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 16)
)
#| label: fig-bad-habits-barplot
#| fig-cap: "How Bad Habits Correlate with Exam Performance"
#| echo: false
#| warning: false
#| message: false
#| fig-width: 6
#| fig-height: 4.5
library(tidyverse)
# Extract correlations with ExamScore for bad habits
bad_corr_vals <- data_clean |>
select(SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
# Build tidy dataframe
bad_df <- tibble(
Habit = c("Social", "Netflix"),
Correlation = c(
bad_corr_vals["ExamScore", "SocialMediaHours"],
bad_corr_vals["ExamScore", "NetflixHours"]
)
) |>
mutate(
Impact = ifelse(Correlation >= 0, "Helps", "Hurts"),
LabelPos = ifelse(Correlation >= 0, Correlation - 0.03, Correlation + 0.03)
)
# Simple bar plot
ggplot(bad_df, aes(x = Habit, y = Correlation, fill = Impact)) +
geom_col(width = 0.6) +
geom_text(
aes(label = Correlation, y = LabelPos),
color = "white",
size = 5,
fontface = "bold"
) +
scale_fill_manual(values = c("Helps" = "dodgerblue", "Hurts" = "firebrick")) +
coord_cartesian(ylim = c(-0.25, 0.05)) +
labs(
x = "Bad Habit",
y = "Correlation with Exam Score",
fill = "Impact"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 16)
)
#| label: tbl-good-habits-correlation
#| tbl-cap: "Correlation with Exam Score for Each Habit"
#| echo: false
#| warning: false
#| message: false
# Select all habits of interest
combined_corr <- data_clean |>
select(StudyHours, AttendanceRate, SleepHours, SocialMediaHours, NetflixHours, ExamScore) |>
cor(use = "complete.obs") |>
round(2)
# Extract only exam score correlations
score_corr <- combined_corr[, "ExamScore", drop = FALSE] |>
as.data.frame()
score_corr <- score_corr[rownames(score_corr) != "ExamScore", , drop = FALSE]
colnames(score_corr) <- "Correlation with ExamScore"
kable(score_corr)
